/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!*********************************!*\
  !*** ./resources/js/ratings.js ***!
  \*********************************/
eval("$(document).ready(function () {\n  if (user === 0) {\n    renderAll(0);\n  } else {\n    var removeBackground = function removeBackground(book) {\n      for (var count = 0; count < 5; count++) {\n        var id = book.id + '-' + (count + 1);\n        $('#' + id).css('color', '#ccc');\n      }\n    };\n\n    stars();\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $(\"meta[name='csrf-token']\").attr('content')\n      }\n    });\n    $(document).on('mouseenter', '.rating', function () {\n      removeBackground(book);\n      var index = $(this).val();\n\n      for (var count = 0; count < index; count++) {\n        var id = book.id + '-' + (count + 1);\n        $('#' + id).css('color', '#ffcc00');\n      }\n    });\n    $(document).on('mouseleave', '.rating', function () {\n      stars();\n    });\n    $(document).on('click', '.rating', function () {\n      var rating = $(this).val();\n      $.ajax({\n        type: 'POST',\n        url: 'ajaxSetRating',\n        data: {\n          userID: user.id,\n          bookID: book.id,\n          rating: rating\n        },\n        success: function success(response) {\n          showAlert(200, 'Book ' + book.name + ' rated ' + rating);\n          stars();\n        }\n      });\n    });\n  }\n});\n\nfunction stars() {\n  $.ajax({\n    type: 'GET',\n    url: 'ajaxGetRating',\n    data: {\n      bookID: book.id,\n      userID: user.id\n    },\n    success: function success(response) {\n      var response = JSON.parse(response);\n      renderAll(response);\n      /*var user_rating = (response.user_rating !== 0) ? response.user_rating : \"\";\n      var rating = (response.average_rating !== 0) ? response.average_rating : \"\";\n      var number_of_ratings = (response.number_of_ratings !== 0) ? response.number_of_ratings : \"\";*/\n\n      /*var user_rating = response.user_rating;\n      var rating = response.average_rating;\n      var number_of_ratings = response.number_of_ratings;*/\n\n      /*$('#get_rating').empty();\n      $('#get_rating').append(`<p>Rating : `+rating+`</p>\n          <ul class=\"list-inline\">\n          `+renderStars(rating)+ `\n           </ul>\n          <p>You rated : `+user_rating+`</p>\n          <p>Total number of rates : `+number_of_ratings+`</p>`\n       );*/\n    }\n  });\n}\n\nfunction renderAll(response) {\n  var user_rating;\n  var rating;\n  var number_of_ratings;\n\n  if (response === 'prazdne') {\n    user_rating = \" \";\n    rating = \" \";\n    number_of_ratings = \" \";\n  } else {\n    user_rating = response.user_rating;\n    rating = response.average_rating;\n    number_of_ratings = response.number_of_ratings;\n  }\n\n  console.log(user_rating);\n  $('#get_rating').empty();\n  $('#get_rating').append(\"<p>Rating : \" + Math.round(rating) + \"</p>\\n                <ul class=\\\"list-inline\\\">\\n                \" + renderStars(rating) + \"\\n\\n                </ul>\\n                <p>You rated : \" + user_rating + \"</p>\\n                <p>Total number of rates : \" + number_of_ratings + \"</p>\");\n}\n\nfunction renderStars(response) {\n  var html = '';\n  var color = 0;\n\n  for (var count = 0; count < 5; count++) {\n    if (count < response) {\n      color = '#ffcc00';\n    } else {\n      color = '#ccc';\n    }\n\n    html += \"<li title=\\\"\".concat(count + 1, \"\\\" id=\\\"\").concat(book.id, \"-\").concat(count + 1, \"\\\" class=\\\"rating\\\" value=\\\"\").concat(count + 1, \"\\\"  style=\\\"cursor:pointer; color:\").concat(color, \"; font-size:40px;\\\">&#9733;</li>\");\n  }\n\n  return html;\n}\n\nfunction showAlert(code, message) {\n  $('#notifDiv').css('background', code === 200 ? 'green' : 'red');\n  $('#notifDiv').fadeIn();\n  $('#notifDiv').text(message);\n  setTimeout(function () {\n    $('#notifDiv').fadeOut();\n  }, 3000);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/ratings.js\n");
/******/ })()
;